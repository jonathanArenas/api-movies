{"version":3,"file":"Mutation.js","names":["Mutation","createMovie","_","input","Movie_catalog","create","Movies","updateMovie","_id","findByIdAndUpdate","removeMovie","id","findByIdAndRemove","find","updateLikesMovieById","findById","Movie","likes","res","createUser","bcrypt","hash","password","User","user","payload","userId","email","token","createToken","response","status"],"sources":["../../../src/graphql/resolvers/Mutation.js"],"sourcesContent":["import Movie_catalog from \"../../models/Movies_catalog\";\r\nimport User from \"../../models/User\";\r\nimport bcrypt from \"bcryptjs\"\r\nimport createToken from \"../../utils\";\r\nconst Mutation = {\r\n    async createMovie(_, { input }) {\r\n        const Movies = await Movie_catalog.create(input)\r\n        return Movies\r\n    },\r\n    async updateMovie(_, { input, _id }) {\r\n        return await Movie_catalog.findByIdAndUpdate(\r\n            _id,\r\n            input,\r\n            { new: true }\r\n        )\r\n    },\r\n    async removeMovie(_, { id }) {\r\n        await Movie_catalog.findByIdAndRemove(id)\r\n        return await Movie_catalog.find()\r\n    },\r\n    \r\n    async updateLikesMovieById(_,{id}){\r\n        const Movie = await Movie_catalog.findById(id)\r\n        const likes = Movie.likes\r\n        Movie.likes = likes+1;\r\n\r\n        const res = await  Movie_catalog.findByIdAndUpdate(id,\r\n            {likes: Movie.likes},{new: true}\r\n            )\r\n        return res\r\n    },\r\n\r\n    async createUser(_,{input}){\r\n        const hash = await bcrypt.hash(input.password, 10);\r\n        input.password = hash\r\n        const user = await User.create(input)\r\n        const payload = {\r\n            userId: user.id,\r\n            email: user.email\r\n          };\r\n          // este es el Token @.\r\n        const token = createToken(payload);\r\n        return {\r\n            response: token,\r\n            status: true\r\n        }\r\n    }\r\n\r\n}\r\nexport default Mutation"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AAAsC;AAAA,+CAFtC;AAAA;AAAA;AAGA,IAAMA,QAAQ,GAAG;EACPC,WAAW,uBAACC,CAAC,QAAa;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAATC,KAAK,QAALA,KAAK;cAAA;cAAA,OACHC,0BAAa,CAACC,MAAM,CAACF,KAAK,CAAC;YAAA;cAA1CG,MAAM;cAAA,iCACLA,MAAM;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACjB,CAAC;EACKC,WAAW,uBAACL,CAAC,SAAkB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAdC,KAAK,SAALA,KAAK,EAAEK,GAAG,SAAHA,GAAG;cAAA;cAAA,OAChBJ,0BAAa,CAACK,iBAAiB,CACxCD,GAAG,EACHL,KAAK,EACL;gBAAE,OAAK;cAAK,CAAC,CAChB;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACL,CAAC;EACKO,WAAW,uBAACR,CAAC,SAAU;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAANS,EAAE,SAAFA,EAAE;cAAA;cAAA,OACfP,0BAAa,CAACQ,iBAAiB,CAACD,EAAE,CAAC;YAAA;cAAA;cAAA,OAC5BP,0BAAa,CAACS,IAAI,EAAE;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACrC,CAAC;EAEKC,oBAAoB,gCAACZ,CAAC,SAAM;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAJS,EAAE,SAAFA,EAAE;cAAA;cAAA,OACRP,0BAAa,CAACW,QAAQ,CAACJ,EAAE,CAAC;YAAA;cAAxCK,KAAK;cACLC,KAAK,GAAGD,KAAK,CAACC,KAAK;cACzBD,KAAK,CAACC,KAAK,GAAGA,KAAK,GAAC,CAAC;cAAC;cAAA,OAEHb,0BAAa,CAACK,iBAAiB,CAACE,EAAE,EACjD;gBAACM,KAAK,EAAED,KAAK,CAACC;cAAK,CAAC,EAAC;gBAAC,OAAK;cAAI,CAAC,CAC/B;YAAA;cAFCC,GAAG;cAAA,kCAGFA,GAAG;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACd,CAAC;EAEKC,UAAU,sBAACjB,CAAC,SAAS;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAPC,KAAK,SAALA,KAAK;cAAA;cAAA,OACFiB,oBAAM,CAACC,IAAI,CAAClB,KAAK,CAACmB,QAAQ,EAAE,EAAE,CAAC;YAAA;cAA5CD,IAAI;cACVlB,KAAK,CAACmB,QAAQ,GAAGD,IAAI;cAAA;cAAA,OACFE,gBAAI,CAAClB,MAAM,CAACF,KAAK,CAAC;YAAA;cAA/BqB,IAAI;cACJC,OAAO,GAAG;gBACZC,MAAM,EAAEF,IAAI,CAACb,EAAE;gBACfgB,KAAK,EAAEH,IAAI,CAACG;cACd,CAAC,EACD;cACIC,KAAK,GAAG,IAAAC,iBAAW,EAACJ,OAAO,CAAC;cAAA,kCAC3B;gBACHK,QAAQ,EAAEF,KAAK;gBACfG,MAAM,EAAE;cACZ,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EACL;AAEJ,CAAC;AAAA,eACc/B,QAAQ;AAAA"}